version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: >
      redis-server
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --timeout 0
      --tcp-keepalive 300
      --save ""
      --appendonly no
      --maxclients 10000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 1s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          memory: 2G
    sysctls:
      net.core.somaxconn: 10000
    networks:
      - marketflow

  marketflow:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    command: ["sh", "-c", "sleep 10 && ./marketflow"]
    environment:
      REDIS_ADDR: "redis:6379"
      POSTGRES_URL: "postgres://postgres:123@postgres:5432/marketflow?sslmode=disable"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          memory: 2G
    volumes:
      - ./logs:/app/logs
    networks:
      - marketflow

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: marketflow
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      PG_TUNE: "true"
      PG_MAX_CONNECTIONS: "100"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGOPTIONS: "-c statement_timeout=3000 -c lock_timeout=2000"
      PGCONNECT_TIMEOUT: "10"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 2s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    networks:
      - marketflow

  exchanges:
    image: exchanges:latest
    build:
      context: .
      dockerfile: cmd/docker/Dockerfile
    hostname: exchanges
    container_name: exchanges
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./cmd/docker/tar_files:/app/tar_files
    networks:
      - marketflow
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:40101 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata:

networks:
  marketflow:
    driver: bridge
    name: marketflow
    attachable: true